¶)
>C:\Project\TaskManagment\TaskManagment\Services\TaskService.cs
	namespace 
TaskManagment 
. 
Services $
;$ %
public 

class 
TaskService 
: 
ITaskService +
{		 
private

 
readonly

 
	ITaskRepo

 "
	_taskRepo

# ,
;

, -
public 
TaskService 
( 
	ITaskRepo %
taskRepo& .
). /
{ 	
	_taskRepo 
= 
taskRepo  
;  !
} 	
public 
async 
Task 
< 
ApiResponse %
<% &
int& )
>) *
>* +

UpdateTask, 6
(6 7
int7 :
TaskId; A
,A B
TaskRequestDtoC Q
taskDtoR Y
)Y Z
{ 	
if 
( 
taskDto 
== 
null 
)  
{ 
return 
ApiResponse "
<" #
int# &
>& '
.' (
FailureResponse( 7
(7 8
$str8 I
)I J
;J K
} 
Models 
. 
Task 
newTask 
=  !
new" %
Models& ,
., -
Task- 1
{ 
TaskId 
= 
TaskId 
,  
Title 
= 
taskDto 
.  
title  %
??& (
string) /
./ 0
Empty0 5
,5 6
Description 
= 
taskDto %
.% &
description& 1
,1 2

AssignedTo 
= 
taskDto $
.$ %
assignTo% -
,- .
Status 
= 
taskDto  
.  !
status! '
??( *
string+ 1
.1 2
Empty2 7
,7 8
} 
; 
int   
taskId   
=   
await   
	_taskRepo   (
.  ( )

AddNewTask  ) 3
(  3 4
newTask  4 ;
)  ; <
;  < =
return!! 
ApiResponse!! 
<!! 
int!! "
>!!" #
.!!# $
SuccesResponse!!$ 2
(!!2 3
taskId!!3 9
,!!9 :
$str!!; b
)!!b c
;!!c d
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
ApiResponse$$ %
<$$% &
List$$& *
<$$* +
TaskResponse$$+ 7
>$$7 8
>$$8 9
>$$9 :
GetTasks$$; C
($$C D
string$$D J
?$$J K
OrderStatus$$L W
)$$W X
{%% 	
List&& 
<&& 
TaskResponseSp&& 
>&&  
data&&! %
=&&& '
await&&( -
	_taskRepo&&. 7
.&&7 8
GetAllTaskByStatus&&8 J
(&&J K
OrderStatus&&K V
)&&V W
;&&W X
if(( 
((( 
!(( 
data(( 
.(( 
Any(( 
((( 
)(( 
)(( 
{)) 
return** 
ApiResponse** "
<**" #
List**# '
<**' (
TaskResponse**( 4
>**4 5
>**5 6
.**6 7
FailureResponse**7 F
(**F G
$str**G d
)**d e
;**e f
}++ 
List-- 
<-- 
TaskResponse-- 
>-- 
response-- '
=--( )
data--* .
.--. /
GroupBy--/ 6
(--6 7
u--7 8
=>--9 ;
new--< ?
{--@ A
u--B C
.--C D
status--D J
}--K L
)--L M
.--M N
Select--N T
(--T U
g--U V
=>--W Y
new--Z ]
TaskResponse--^ j
{.. 
status// 
=// 
g// 
.// 
Key// 
.// 
status// %
,//% &
taskData00 
=00 
g00 
.00 
Select00 #
(00# $
v00$ %
=>00& (
new00) ,
TaskResponseSp00- ;
{11 
status22 
=22 
v22 
.22 
status22 %
,22% &
TaskId33 
=33 
v33 
.33 
TaskId33 %
,33% &
Title44 
=44 
v44 
.44 
Title44 #
,44# $
Name55 
=55 
v55 
.55 
Name55 !
}66 
)66 
.66 
ToList66 
(66 
)66 
}77 
)77 
.77 
ToList77 
(77 
)77 
;77 
return99 
ApiResponse99 
<99 
List99 #
<99# $
TaskResponse99$ 0
>990 1
>991 2
.992 3
SuccesResponse993 A
(99A B
response99B J
,99J K
$str99L f
)99f g
;99g h
}:: 	
};; Õ"
>C:\Project\TaskManagment\TaskManagment\Services\AuthService.cs
	namespace 	
TaskManagment
 
. 
Services  
;  !
public		 
class		 
AuthService		 
:		 
IAuthService		 '
{

 
private 
readonly 
	IAuthRepo 
	_authRepo (
;( )
public 

AuthService 
( 
	IAuthRepo  
authRepo! )
)) *
{ 
	_authRepo 
= 
authRepo 
; 
} 
public 

async 
Task 
< 
ApiResponse !
<! "
int" %
>% &
>& '
UserRegistration( 8
(8 9
UserRegisterDto9 H
dtoI L
)L M
{ 
if 

( 
dto 
== 
null 
) 
{ 	
return 
ApiResponse 
< 
int "
>" #
.# $
FailureResponse$ 3
(3 4
$str4 T
)T U
;U V
} 	
User 
newUser 
= 
new 
User 
{ 	
Name 
= 
dto 
. 
Name 
?? 
string %
.% &
Empty& +
,+ ,
PasswordHash 
= 
dto 
. 
PasswordHash +
??, .
string/ 5
.5 6
Empty6 ;
,; <
Email 
= 
dto 
. 
Email 
??  
string! '
.' (
Empty( -
,- .
Role 
= 
dto 
. 
Role 
?? 
string %
.% &
Empty& +
} 	
;	 

int   
userId   
=   
await   
	_authRepo   $
.  $ %

AddNewUser  % /
(  / 0
newUser  0 7
)  7 8
;  8 9
return"" 
ApiResponse"" 
<"" 
int"" 
>"" 
.""  
SuccesResponse""  .
("". /
userId""/ 5
,""5 6
$str""7 V
)""V W
;""W X
}## 
public%% 

async%% 
Task%% 
<%% 
ApiResponse%% !
<%%! "
LoginResponse%%" /
>%%/ 0
>%%0 1
	UserLogin%%2 ;
(%%; <
LoginDto%%< D
loginDto%%E M
)%%M N
{&& 
if'' 

('' 
loginDto'' 
=='' 
null'' 
)'' 
{(( 	
return)) 
ApiResponse)) 
<)) 
LoginResponse)) ,
>)), -
.))- .
FailureResponse)). =
())= >
$str))> R
)))R S
;))S T
}** 	
User,, 
user,, 
=,, 
new,, 
User,, 
{-- 	
Email.. 
=.. 
loginDto.. 
... 
Email.. "
??..# %
string..& ,
..., -
Empty..- 2
,..2 3
PasswordHash// 
=// 
loginDto// #
.//# $
PasswordHash//$ 0
??//1 3
string//4 :
.//: ;
Empty//; @
}00 	
;00	 

LoginResponse22 
response22 
=22  
await22! &
	_authRepo22' 0
.220 1
IsUserAutehnticate221 C
(22C D
user22D H
)22H I
;22I J
if44 

(44 
response44 
.44 
Token44 
==44 
$str44 $
)44$ %
{55 	
return66 
ApiResponse66 
<66 
LoginResponse66 ,
>66, -
.66- .
FailureResponse66. =
(66= >
$str66> U
)66U V
;66V W
}77 	
return99 
ApiResponse99 
<99 
LoginResponse99 '
>99' (
.99( )
SuccesResponse99) 7
(997 8
response998 @
,99@ A
$str99B Y
)99Y Z
;99Z [
}:: 
};; »'
=C:\Project\TaskManagment\TaskManagment\Repository\TaskRepo.cs
	namespace 	
TaskManagment
 
. 

Repository "
;" #
public		 
class		 
TaskRepo		 
:		 
	ITaskRepo		 !
{

 
private 
readonly 
string 
_connectionString -
;- .
public 

TaskRepo 
( 
IConfiguration "
configuration# 0
)0 1
{ 
_connectionString 
= 
configuration )
.) *
GetConnectionString* =
(= >
$str> Q
)Q R
??S U
stringV \
.\ ]
Empty] b
;b c
} 
public 
async 
Task 
< 
int 
> 

AddNewTask &
(& '
Models' -
.- .
Task. 2
newTask3 :
): ;
{ 
try 
{ 	
using 
SqlConnection 
conn  $
=% &
new' *
SqlConnection+ 8
(8 9
_connectionString9 J
)J K
;K L
DynamicParameters 

parameters (
=) *
new+ .
DynamicParameters/ @
(@ A
)A B
;B C

parameters 
. 
Add 
( 
$str $
,$ %
newTask& -
.- .
TaskId. 4
)4 5
;5 6

parameters 
. 
Add 
( 
$str #
,# $
newTask% ,
., -
Title- 2
)2 3
;3 4

parameters 
. 
Add 
( 
$str )
,) *
newTask+ 2
.2 3
Description3 >
)> ?
;? @

parameters 
. 
Add 
( 
$str (
,( )
newTask* 1
.1 2

AssignedTo2 <
)< =
;= >

parameters 
. 
Add 
( 
$str $
,$ %
newTask& -
.- .
Status. 4
)4 5
;5 6

parameters 
. 
Add 
( 
$str '
,' (
dbType) /
:/ 0
DbType1 7
.7 8
Int328 =
,= >
	direction? H
:H I
ParameterDirectionJ \
.\ ]
Output] c
)c d
;d e
await 
conn 
. 
ExecuteAsync #
(# $
$str$ 5
,5 6

parameters  $ .
,  . /
commandType!!$ /
:!!/ 0
CommandType!!1 <
.!!< =
StoredProcedure!!= L
)!!L M
;!!M N
return## 

parameters## 
.## 
Get## !
<##! "
int##" %
>##% &
(##& '
$str##' 3
)##3 4
;##4 5
}$$ 	
catch%% 
(%% 
	Exception%% 
e%% 
)%% 
{&& 	
Console'' 
.'' 
	WriteLine'' 
('' 
e'' 
)''  
;''  !
throw(( 
;(( 
})) 	
}** 
public,, 

async,, 
Task,, 
<,, 
List,, 
<,, 
TaskResponseSp,, )
>,,) *
>,,* +
GetAllTaskByStatus,,, >
(,,> ?
string,,? E
?,,E F
OrderStatus,,G R
),,R S
{-- 
try.. 
{// 	
using00 
SqlConnection00 
conn00  $
=00% &
new00' *
SqlConnection00+ 8
(008 9
_connectionString009 J
)00J K
;00K L
IEnumerable22 
<22 
TaskResponseSp22 &
>22& '
tasks22( -
=22. /
await33  %
conn33& *
.33* +

QueryAsync33+ 5
<335 6
TaskResponseSp336 D
>33D E
(33E F
$str33F S
,33S T
new44F I
{44J K
@status44L S
=44T U
OrderStatus44V a
}44b c
,44c d
commandType55F Q
:55Q R
CommandType55S ^
.55^ _
StoredProcedure55_ n
)55n o
;55o p
return66 
tasks66 
.66 
ToList66 
(66  
)66  !
;66! "
}88 	
catch99 
(99 
	Exception99 
e99 
)99 
{:: 	
Console;; 
.;; 
	WriteLine;; 
(;; 
e;; 
);;  
;;;  !
throw<< 
;<< 
}== 	
}>> 
}@@ ú2
=C:\Project\TaskManagment\TaskManagment\Repository\AuthRepo.cs
	namespace 	
TaskManagment
 
. 

Repository "
;" #
public

 
class

 
AuthRepo

 
:

 
	IAuthRepo

 !
{ 
private 
readonly 
string 
_connectionString -
;- .
public 

AuthRepo 
( 
IConfiguration "
configuration# 0
)0 1
{ 
_connectionString 
= 
configuration )
.) *
GetConnectionString* =
(= >
$str> Q
)Q R
??S U
stringV \
.\ ]
Empty] b
;b c
} 
public 

async 
Task 
< 
int 
> 

AddNewUser %
(% &
User& *
newUser+ 2
)2 3
{ 
try 
{ 	
using 
SqlConnection 
conn  $
=% &
new' *
SqlConnection+ 8
(8 9
_connectionString9 J
)J K
;K L
DynamicParameters 

parameters (
=) *
new+ .
DynamicParameters/ @
(@ A
)A B
;B C

parameters 
. 
Add 
( 
$str "
," #
newUser$ +
.+ ,
Name, 0
)0 1
;1 2

parameters 
. 
Add 
( 
$str *
,* +
newUser, 3
.3 4
PasswordHash4 @
)@ A
;A B

parameters 
. 
Add 
( 
$str #
,# $
newUser% ,
., -
Email- 2
)2 3
;3 4

parameters 
. 
Add 
( 
$str "
," #
newUser$ +
.+ ,
Role, 0
)0 1
;1 2

parameters 
. 
Add 
( 
$str $
,$ %
dbType& ,
:, -
DbType. 4
.4 5
Int325 :
,: ;
	direction< E
:E F
ParameterDirectionG Y
.Y Z
OutputZ `
)` a
;a b
await   
conn   
.   
ExecuteAsync   #
(  # $
$str  $ 6
,  6 7

parameters!!$ .
,!!. /
commandType""$ /
:""/ 0
CommandType""1 <
.""< =
StoredProcedure""= L
)""L M
;""M N
return$$ 

parameters$$ 
.$$ 
Get$$ !
<$$! "
int$$" %
>$$% &
($$& '
$str$$' 0
)$$0 1
;$$1 2
}%% 	
catch&& 
(&& 
	Exception&& 
e&& 
)&& 
{'' 	
Console(( 
.(( 
	WriteLine(( 
((( 
e(( 
)((  
;((  !
throw)) 
;)) 
}** 	
}++ 
public-- 

async-- 
Task-- 
<-- 
LoginResponse-- #
>--# $
IsUserAutehnticate--% 7
(--7 8
User--8 <
user--= A
)--A B
{.. 
try// 
{00 	
using11 
SqlConnection11 
conn11  $
=11% &
new11' *
SqlConnection11+ 8
(118 9
_connectionString119 J
)11J K
;11K L
DynamicParameters33 

parameters33 (
=33) *
new33+ .
DynamicParameters33/ @
(33@ A
)33A B
;33B C

parameters55 
.55 
Add55 
(55 
$str55 #
,55# $
user55% )
.55) *
Email55* /
)55/ 0
;550 1

parameters66 
.66 
Add66 
(66 
$str66 *
,66* +
user66, 0
.660 1
PasswordHash661 =
)66= >
;66> ?

parameters77 
.77 
Add77 
(77 
$str77 "
,77" #
dbType77$ *
:77* +
DbType77, 2
.772 3
String773 9
,779 :
size77; ?
:77? @
$num77A C
,77C D
	direction77E N
:77N O
ParameterDirection77P b
.77b c
Output77c i
)77i j
;77j k

parameters88 
.88 
Add88 
(88 
$str88 #
,88# $
dbType88% +
:88+ ,
DbType88- 3
.883 4
String884 :
,88: ;
size88< @
:88@ A
$num88B E
,88E F
	direction88G P
:88P Q
ParameterDirection88R d
.88d e
Output88e k
)88k l
;88l m
await:: 
conn:: 
.:: 
ExecuteAsync:: #
(::# $
$str::$ 6
,::6 7

parameters;;$ .
,;;. /
commandType<<$ /
:<</ 0
CommandType<<1 <
.<<< =
StoredProcedure<<= L
)<<L M
;<<M N
string>> 
UserRole>> 
=>> 

parameters>> (
.>>( )
Get>>) ,
<>>, -
string>>- 3
>>>3 4
(>>4 5
$str>>5 <
)>>< =
;>>= >
string?? 
	UserToken?? 
=?? 

parameters?? )
.??) *
Get??* -
<??- .
string??. 4
>??4 5
(??5 6
$str??6 >
)??> ?
;??? @
LoginResponseAA 
responseAA "
=AA# $
newAA% (
LoginResponseAA) 6
{BB 
RoleCC 
=CC 
UserRoleCC 
,CC  
TokenDD 
=DD 
	UserTokenDD !
}EE 
;EE 
returnFF 
responseFF 
;FF 
}GG 	
catchHH 
(HH 
	ExceptionHH 
eHH 
)HH 
{II 	
ConsoleJJ 
.JJ 
	WriteLineJJ 
(JJ 
eJJ 
)JJ  
;JJ  !
throwKK 
;KK 
}LL 	
}MM 
}NN ¯
1C:\Project\TaskManagment\TaskManagment\Program.cs
var		 
builder		 
=		 
WebApplication		 
.		 
CreateBuilder		 *
(		* +
args		+ /
)		/ 0
;		0 1
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
builder 
. 
Services 
. 
AddControllers 
(  
)  !
.! "
AddJsonOptions" 0
(0 1
options1 8
=>9 ;
{ 
options 
. !
JsonSerializerOptions !
.! "
ReferenceHandler" 2
=3 4
System5 ;
.; <
Text< @
.@ A
JsonA E
.E F
SerializationF S
.S T
ReferenceHandlerT d
.d e
IgnoreCyclese q
;q r
options 
. !
JsonSerializerOptions !
.! "
WriteIndented" /
=0 1
true2 6
;6 7
} 
) 
; 
builder 
. 
Services 
. 
	AddScoped 
< 
IAuthService '
,' (
AuthService( 3
>3 4
(4 5
)5 6
;6 7
builder 
. 
Services 
. 
	AddScoped 
< 
	IAuthRepo $
,$ %
AuthRepo% -
>- .
(. /
)/ 0
;0 1
builder 
. 
Services 
. 
	AddScoped 
< 
ITaskService '
,' (
TaskService( 3
>3 4
(4 5
)5 6
;6 7
builder 
. 
Services 
. 
	AddScoped 
< 
	ITaskRepo $
,$ %
TaskRepo% -
>- .
(. /
)/ 0
;0 1
builder 
. 
Services 
. 
AddDbContext 
< 
TaskContext )
>) *
(* +
opt+ .
=>/ 1
{ 
opt 
. 
UseSqlServer 
( 
builder 
. 
Configuration *
.* +
GetConnectionString+ >
(> ?
$str? R
)R S
)S T
;T U
} 
) 
; 
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
app 
. 
MapControllers 
( 
) 
; 
if"" 
("" 
app"" 
."" 
Environment"" 
."" 
IsDevelopment"" !
(""! "
)""" #
)""# $
{## 
app$$ 
.$$ 

UseSwagger$$ 
($$ 
)$$ 
;$$ 
app%% 
.%% 
UseSwaggerUI%% 
(%% 
)%% 
;%% 
}&& 
app(( 
.(( 
UseHttpsRedirection(( 
((( 
)(( 
;(( 
app++ 
.++ 
Run++ 
(++ 
)++ 	
;++	 
í
5C:\Project\TaskManagment\TaskManagment\Models\User.cs
	namespace 	
TaskManagment
 
. 
Models 
; 
public 
partial 
class 
User 
{ 
public 

int 
UserId 
{ 
get 
; 
set  
;  !
}" #
public

 

string

 
Name

 
{

 
get

 
;

 
set

 !
;

! "
}

# $
=

% &
null

' +
!

+ ,
;

, -
public 

string 
Email 
{ 
get 
; 
set "
;" #
}$ %
=& '
null( ,
!, -
;- .
public 

string 
PasswordHash 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
public 

string 
Role 
{ 
get 
; 
set !
;! "
}# $
=% &
null' +
!+ ,
;, -
public 

virtual 
ICollection 
< 
Task #
># $
Tasks% *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
=9 :
new; >
List? C
<C D
TaskD H
>H I
(I J
)J K
;K L
} ·&
<C:\Project\TaskManagment\TaskManagment\Models\TaskContext.cs
	namespace 	
TaskManagment
 
. 
Models 
; 
public 
partial 
class 
TaskContext  
:! "
	DbContext# ,
{ 
public		 

TaskContext		 
(		 
)		 
{

 
} 
public 

TaskContext 
( 
DbContextOptions '
<' (
TaskContext( 3
>3 4
options5 <
)< =
: 	
base
 
( 
options 
) 
{ 
} 
public 

virtual 
DbSet 
< 
Task 
> 
Tasks $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 

virtual 
DbSet 
< 
User 
> 
Users $
{% &
get' *
;* +
set, /
;/ 0
}1 2
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
modelBuilder 
. 
Entity 
< 
Task  
>  !
(! "
entity" (
=>) +
{ 	
entity 
. 
HasKey 
( 
e 
=> 
e  
.  !
TaskId! '
)' (
.( )
HasName) 0
(0 1
$str1 N
)N O
;O P
entity 
. 
Property 
( 
e 
=>  
e! "
." #
Status# )
)) *
.* +
HasMaxLength+ 7
(7 8
$num8 :
): ;
;; <
entity 
. 
Property 
( 
e 
=>  
e! "
." #
Title# (
)( )
.) *
HasMaxLength* 6
(6 7
$num7 :
): ;
;; <
entity   
.   
HasOne   
(   
d   
=>   
d    
.    ! 
AssignedToNavigation  ! 5
)  5 6
.  6 7
WithMany  7 ?
(  ? @
p  @ A
=>  B D
p  E F
.  F G
Tasks  G L
)  L M
.!! 
HasForeignKey!! 
(!! 
d!!  
=>!!! #
d!!$ %
.!!% &

AssignedTo!!& 0
)!!0 1
."" 
HasConstraintName"" "
(""" #
$str""# C
)""C D
;""D E
}## 	
)##	 

;##
 
modelBuilder%% 
.%% 
Entity%% 
<%% 
User%%  
>%%  !
(%%! "
entity%%" (
=>%%) +
{&& 	
entity'' 
.'' 
HasKey'' 
('' 
e'' 
=>'' 
e''  
.''  !
UserId''! '
)''' (
.''( )
HasName'') 0
(''0 1
$str''1 N
)''N O
;''O P
entity)) 
.)) 
HasIndex)) 
()) 
e)) 
=>))  
e))! "
.))" #
Email))# (
,))( )
$str))* G
)))G H
.))H I
IsUnique))I Q
())Q R
)))R S
;))S T
entity++ 
.++ 
Property++ 
(++ 
e++ 
=>++  
e++! "
.++" #
Email++# (
)++( )
.++) *
HasMaxLength++* 6
(++6 7
$num++7 :
)++: ;
;++; <
entity,, 
.,, 
Property,, 
(,, 
e,, 
=>,,  
e,,! "
.,," #
Name,,# '
),,' (
.-- 
HasMaxLength-- 
(-- 
$num-- !
)--! "
... 
	IsUnicode.. 
(.. 
false..  
)..  !
;..! "
entity// 
.// 
Property// 
(// 
e// 
=>//  
e//! "
.//" #
PasswordHash//# /
)/// 0
.//0 1
HasMaxLength//1 =
(//= >
$num//> A
)//A B
;//B C
entity00 
.00 
Property00 
(00 
e00 
=>00  
e00! "
.00" #
Role00# '
)00' (
.00( )
HasMaxLength00) 5
(005 6
$num006 8
)008 9
;009 :
}11 	
)11	 

;11
 
}33 
}55 
5C:\Project\TaskManagment\TaskManagment\Models\Task.cs
	namespace 	
TaskManagment
 
. 
Models 
; 
public 
partial 
class 
Task 
{ 
public 

int 
TaskId 
{ 
get 
; 
set  
;  !
}" #
public

 

string

 
Title

 
{

 
get

 
;

 
set

 "
;

" #
}

$ %
=

& '
null

( ,
!

, -
;

- .
public 

string 
? 
Description 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 

int 
? 

AssignedTo 
{ 
get  
;  !
set" %
;% &
}' (
public 

string 
Status 
{ 
get 
; 
set  #
;# $
}% &
=' (
null) -
!- .
;. /
public 

DateOnly 
DueDate 
{ 
get !
;! "
set# &
;& '
}( )
public 

virtual 
User 
?  
AssignedToNavigation -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
} Ø
AC:\Project\TaskManagment\TaskManagment\Interfaces\ITaskService.cs
	namespace 	
TaskManagment
 
. 

Interfaces "
;" #
public 
	interface 
ITaskService 
{ 
Task 	
<	 

ApiResponse
 
< 
int 
> 
> 

UpdateTask &
(& '
int' *
TaskId+ 1
,1 2
TaskRequestDto3 A
taskDtoB I
)I J
;J K
Task		 
<		 	
ApiResponse			 
<		 
List		 
<		 
TaskResponse		 &
>		& '
>		' (
>		( )
GetTasks		* 2
(		2 3
string		3 9
?		9 :
OrderStatus		; F
)		F G
;		G H
} é
AC:\Project\TaskManagment\TaskManagment\Interfaces\IAuthService.cs
	namespace 	
TaskManagment
 
. 

Interfaces "
;" #
public 
	interface 
IAuthService 
{ 
Task 
< 	
ApiResponse	 
< 
int 
> 
> 
UserRegistration +
(+ ,
UserRegisterDto, ;
dto< ?
)? @
;@ A
Task		 
<		 	
ApiResponse			 
<		 
LoginResponse		 "
>		" #
>		# $
	UserLogin		% .
(		. /
LoginDto		/ 7
loginDto		8 @
)		@ A
;		A B
}

 Õ
>C:\Project\TaskManagment\TaskManagment\Extensions\ITaskRepo.cs
	namespace 	
TaskManagment
 
. 

Extensions "
;" #
public 
	interface 
	ITaskRepo 
{ 
Task 
< 	
int	 
> 

AddNewTask 
( 
Models 
.  
Task  $
newTask% ,
), -
;- .
Task 
< 	
List	 
< 
TaskResponseSp 
> 
> 
GetAllTaskByStatus 1
(1 2
string2 8
?8 9
OrderStatus: E
)E F
;F G
}		 é
>C:\Project\TaskManagment\TaskManagment\Extensions\IAuthRepo.cs
	namespace 	
TaskManagment
 
. 

Extensions "
;" #
public 
	interface 
	IAuthRepo 
{ 
Task 
< 	
int	 
> 

AddNewUser 
( 
User 
newUser %
)% &
;& '
Task		 
<		 	
LoginResponse			 
>		 
IsUserAutehnticate		 *
(		* +
User		+ /
user		0 4
)		4 5
;		5 6
}

 È
GC:\Project\TaskManagment\TaskManagment\Dto\ResponseDto\LoginResponse.cs
	namespace 	
TaskManagment
 
. 
Dto 
. 
ResponseDto '
;' (
public 
class 
LoginResponse 
{ 
public 

string 
? 
Token 
{ 
get 
; 
set  #
;# $
}% &
public 

string 
? 
Role 
{ 
get 
; 
set "
;" #
}$ %
} 
public		 
class		 
TaskResponse		 
{

 
public 

string 
? 
status 
{ 
get 
;  
set! $
;$ %
}& '
public 

List 
< 
TaskResponseSp 
> 
?  
taskData! )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
} 
public 
class 
TaskResponseSp 
{ 
public 

string 
? 
status 
{ 
get 
;  
set! $
;$ %
}& '
public 

int 
TaskId 
{ 
get 
; 
set  
;  !
}" #
public 

string 
? 
Title 
{ 
get 
; 
set  #
;# $
}% &
public 

string 
? 
Name 
{ 
get 
; 
set "
;" #
}$ %
} Õ
FC:\Project\TaskManagment\TaskManagment\Dto\ResponseDto\APIResoponse.cs
	namespace 	
TaskManagment
 
. 
Dto 
. 
ResponseDto '
;' (
public 
class 
ApiResponse 
< 
T 
> 
{ 
public 

bool 
error_status 
{ 
get "
;" #
set$ '
;' (
}) *
public 

string 
? 
Message 
{ 
get  
;  !
set" %
;% &
}' (
public 

T 
? 
Data 
{ 
get 
; 
set 
; 
}  
public		 

static		 
ApiResponse		 
<		 
T		 
>		  
SuccesResponse		! /
(		/ 0
T		0 1
data		2 6
,		6 7
string		8 >
message		? F
)		F G
{

 
return 
new 
ApiResponse 
< 
T  
>  !
{ 	
error_status 
= 
false  
,  !
Message 
= 
message 
, 
Data 
= 
data 
} 	
;	 

} 
public 
static 
ApiResponse 
< 
T  
>  !
FailureResponse" 1
(1 2
string3 9
message: A
)A B
{ 
return 
new 
ApiResponse 
< 
T  
>  !
{ 	
error_status 
= 
true 
,  
Message 
= 
message 
, 
} 	
;	 

} 
} Ê
AC:\Project\TaskManagment\TaskManagment\Dto\RequestDto\LoginDto.cs
	namespace 	
TaskManagment
 
. 
Dto 
. 

RequestDto &
;& '
public 
class 
LoginDto 
{ 
public 

string 
? 
Email 
{ 
get 
; 
set  #
;# $
}% &
public 

string 
? 
PasswordHash 
{  !
get" %
;% &
set' *
;* +
}, -
} 
public		 
class		 
UserRegisterDto		 
{

 
public 

string 
? 
Name 
{ 
get 
; 
set "
;" #
}$ %
public 

string 
? 
Email 
{ 
get 
; 
set  #
;# $
}% &
public 

string 
? 
PasswordHash 
{  !
get" %
;% &
set' *
;* +
}, -
public 

string 
? 
Role 
{ 
get 
; 
set "
;" #
}$ %
} 
public 
class 
TaskRequestDto 
{ 
public 

int 
? 
TaskId 
{ 
get 
; 
set !
;! "
}# $
public 

string 
? 
title 
{ 
get 
; 
set  #
;# $
}% &
public 

string 
? 
description 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 

int 
? 
assignTo 
{ 
get 
; 
set  #
;# $
}% &
public 

string 
? 
status 
{ 
get 
;  
set! $
;$ %
}& '
public 

DateOnly 
? 
dueDate 
{ 
get "
;" #
set$ '
;' (
}) *
} ±
DC:\Project\TaskManagment\TaskManagment\Controllers\TaskController.cs
	namespace 	
TaskManagment
 
. 
Controllers #
;# $
[ 
ApiController 
] 
[		 
Route		 
(		 
V		 
)		 	
]			 

public

 
class

 
TaskController

 
:

 
ControllerBase

 ,
{ 
private 
const 
string 
V 
= 
$str /
;/ 0
private 
const 
string 
V1 
= 
$str (
;( )
private 
const 
string 
V2 
= 
$str &
;& '
private 
readonly 
ITaskService !
_taskService" .
;. /
public 

TaskController 
( 
ITaskService &
taskService' 2
)2 3
{ 
_taskService 
= 
taskService "
;" #
} 
[ 
HttpPut 
( 
V1 
) 
] 
public 

async 
Task 
< 
IActionResult #
># $

UpdateTask% /
(/ 0
int0 3
TaskId4 :
,: ;
[< =
FromBody= E
]E F
TaskRequestDtoG U
taskDtoV ]
)] ^
{ 
ApiResponse 
< 
int 
> 
response !
=" #
await$ )
_taskService* 6
.6 7

UpdateTask7 A
(A B
TaskIdB H
,H I
taskDtoJ Q
)Q R
;R S
return 
HandleResponse 
( 
response &
)& '
;' (
} 
[ 
HttpGet 
( 
V2 
) 
] 
public 

async 
Task 
< 
IActionResult #
># $
GetTasks% -
(- .
[. /
	FromQuery/ 8
]8 9
string: @
?@ A
statusB H
)H I
{ 
ApiResponse 
< 
List 
< 
TaskResponse %
>% &
>& '
	resoponse( 1
=2 3
await4 9
_taskService: F
.F G
GetTasksG O
(O P
statusP V
)V W
;W X
return   
HandleResponse   
(   
	resoponse   '
)  ' (
;  ( )
}!! 
public## 

IActionResult## 
HandleResponse## '
<##' (
T##( )
>##) *
(##* +
ApiResponse##+ 6
<##6 7
T##7 8
>##8 9
	resoponse##: C
)##C D
{$$ 
if%% 

(%% 
!%% 
	resoponse%% 
.%% 
error_status%% #
)%%# $
{&& 	
return'' 
Ok'' 
('' 
	resoponse'' 
)''  
;''  !
}(( 	
return)) 
NotFound)) 
()) 
	resoponse)) !
)))! "
;))" #
}** 
}++ ÿ
DC:\Project\TaskManagment\TaskManagment\Controllers\AuthController.cs
	namespace 	
TaskManagment
 
. 
Controllers #
;# $
[ 
ApiController 
] 
[		 
Route		 
(		 
$str		 
)		 
]		 
public

 
class

 
AuthController

 
:

 
ControllerBase

 ,
{ 
private 
readonly 
IAuthService !
_authService" .
;. /
public 

AuthController 
( 
IAuthService &
authService' 2
)2 3
{ 
_authService 
= 
authService "
;" #
} 
[ 
HttpPost 
( 
$str  
)  !
]! "
public 

async 
Task 
< 
IActionResult #
># $
UserRegistration% 5
(5 6
[6 7
FromBody7 ?
]? @
UserRegisterDtoA P
dtoQ T
)T U
{ 
ApiResponse 
< 
int 
> 
	resoponse "
=# $
await% *
_authService+ 7
.7 8
UserRegistration8 H
(H I
dtoI L
)L M
;M N
return 
HandleResponse 
( 
	resoponse '
)' (
;( )
} 
[ 
HttpPost 
( 
$str 
) 
] 
public 

async 
Task 
< 
IActionResult #
># $
	UserLogin% .
(. /
[/ 0
FromBody0 8
]8 9
LoginDto: B
loginDtoC K
)K L
{ 
var 
	resoponse 
= 
await 
_authService *
.* +
	UserLogin+ 4
(4 5
loginDto5 =
)= >
;> ?
return 
HandleResponse 
( 
	resoponse '
)' (
;( )
} 
public!! 

IActionResult!! 
HandleResponse!! '
<!!' (
T!!( )
>!!) *
(!!* +
ApiResponse!!+ 6
<!!6 7
T!!7 8
>!!8 9
	resoponse!!: C
)!!C D
{"" 
if## 

(## 
!## 
	resoponse## 
.## 
error_status## #
)### $
{$$ 	
return%% 
Ok%% 
(%% 
	resoponse%% 
)%%  
;%%  !
}&& 	
return'' 
NotFound'' 
('' 
	resoponse'' !
)''! "
;''" #
}(( 
}** 